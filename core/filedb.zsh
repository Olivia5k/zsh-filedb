export FILEDB_DIRTY=""

function _filedb_add()
{
    local cat name file orig target

    if [[ -z "$1" ]] || [[ -z "$2" ]] || [[ -z "$3" ]]; then
        echo "Usage: zsys add <category> <name> <file path>"
        return 1
    fi

    cat=$1
    name="[$2]"
    file=$3:a  # Use aboslute file names

    if [[ ! -f "$file" ]]; then
        echo "Error: $file is not a valid file."
        return 2
    fi

    if ! [[ "$cat" =~ "CONF_(GLOBAL|LOCAL)" ]]; then
        echo "Error: $cat is not a valid filedb category."
        return 3
    fi

    # To dynamically get the needed map, eval it in
    eval "orig=\"\$${cat}${name}\""

    if [[ -n "$orig" ]]; then
        for f in ${(s: :)orig}; do
            if [[ "$f" = "$file" ]]; then
                echo "Error: $file is already in ${cat}${name}"
                return 4
            fi
        done

        target="$orig $file"
    else
        target="$file"
    fi

    eval "${cat}${name}=\"$target\""
    print -P "%B${file}%b added to %B${cat}${name}%b"

    export FILEDB_DIRTY=";)"
}

function _filedb_commit()
{
    f=$FILEDB

    echo "#!/bin/zsh" > $f
    echo "# Database of filenames for zsh-filedb." >> $f
    echo "# Autogenerated for your pleasure." >> $f
    echo >> $f

    echo "typeset -Ag CONF_LOCAL" >> $f
    for k in ${(ko)CONF_LOCAL}; do
        s=$CONF_LOCAL[$k]

        # Substitute the expanded varaibles back into their variable form.
        s=${s/$XDG_CONFIG_HOME/\$XDG_CONFIG_HOME}
        s=${s/$HOME/\$HOME}

        echo "CONF_LOCAL[$k]=\"$s\"" >> $f
    done

    echo >> $f
    echo "typeset -Ag CONF_GLOBAL" >> $f
    for k in ${(ko)CONF_GLOBAL}; do
        s=$CONF_GLOBAL[$k]
        echo "CONF_GLOBAL[$k]=\"$s\"" >> $f
    done

    echo >> $f
    echo "typeset -Ag LOG_GLOBAL" >> $f
    for k in ${(ko)LOG_GLOBAL}; do
        s=$LOG_GLOBAL[$k]
        echo "LOG_GLOBAL[$k]=\"$s\"" >> $f
    done

    echo >> $f
    echo "export CONF_LOCAL CONF_GLOBAL LOG_GLOBAL" >> $f

    echo
    print -P "%F{green}%BSuccess%b%f! |o/ filedb db updated."
    unset FILEDB_DIRTY
}
